// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface IElasticSignAccount {

    /**
     * An event emitted after user set/reset this smartcontract wallet's password
     * @param pwdhash - the password hash
     */
    event SetPassword(uint indexed pwdhash);

    /**
     * Set/reset password for this smartcontract wallet
     * @param proof1 - proof generated by the old password
     * @param expiration1 - old password signing expiry seconds
     * @param allhash1 - allhash generated by the old password
     * @param proof2 - proof generated by the new password
     * @param pwdhash2 - hash of the new password generated by ZK
     * @param expiration2 - new password signing expiry seconds
     * @param allhash2 - allhash generated by the new password
     */
    function resetPassword(
        uint[8] memory proof1,
        uint expiration1,
        uint allhash1,
        uint[8] memory proof2,
        uint pwdhash2,
        uint expiration2,
        uint allhash2
    ) external;

}
